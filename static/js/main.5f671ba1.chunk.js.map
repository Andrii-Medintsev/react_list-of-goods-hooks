{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","NONE","Error","reverse","App","useState","setIsReversed","setSortType","resetButtonIsActive","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAKKA,E,oFAAAA,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAME,IAAMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGF,SAASC,EACPC,EACAC,EACAC,GAEA,IAAMC,EAAY,YAAOH,GAsBzB,OApBAG,EAAaC,MAAK,SAACC,EAAYC,GAC7B,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKT,EAASY,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,KAAKb,EAASc,KACZ,OAAO,EAET,QACE,MAAM,IAAIC,MAAM,yBAIlBV,GACFC,EAAaU,UAGRV,EAGF,IAAMW,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOb,EAAP,KAAmBc,EAAnB,KACA,EAAgCD,mBAASlB,EAASc,MAAlD,mBAAOV,EAAP,KAAiBgB,EAAjB,KACMC,EAAsBjB,IAAaJ,EAASc,MAAQT,EAmB1D,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYpB,IAAaJ,EAASU,WAEtCe,QA1Be,WACrBL,EAAYpB,EAASU,WAmBjB,iCAWA,wBACEa,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYpB,IAAaJ,EAASY,SAEtCa,QAjCa,WACnBL,EAAYpB,EAASY,SA0BjB,4BAWA,wBACEW,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAanB,IAEjBoB,QAxCQ,WACdN,GAAed,IAiCX,qBAWCgB,EAEG,wBACEE,KAAK,SACLD,UAAU,4BACVG,QA9CE,WACZL,EAAYpB,EAASc,MACrBK,GAAc,IAyCN,mBAOE,MAGR,6BACE,6BACGjB,EAAkBD,EAAiBG,EAAUC,GAC3CqB,KAAI,SAAAC,GAAI,OACP,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cC7HtCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5f671ba1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1: string, g2: string): number => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      case SortType.NONE:\n        return 0;\n\n      default:\n        throw new Error('No such sort type');\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const resetButtonIsActive = sortType !== SortType.NONE || isReversed;\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {resetButtonIsActive\n          ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          ) : '' }\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(goodsFromServer, sortType, isReversed)\n            .map(good => (\n              <li data-cy=\"Good\" key={good}>{good}</li>\n            ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}